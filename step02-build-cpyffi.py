#!/usr/bin/env python

import sys

from cffi import FFI

builder = FFI()

builder.cdef(open("cpyffi-cdef.h").read())

# Macro int constants
builder.cdef(
    """
#define PyDict_MINSIZE ...
#define PySet_MINSIZE ...
#define Py_TPFLAGS_BASETYPE ...
#define Py_TPFLAGS_CHECKTYPES ...
#define Py_TPFLAGS_HAVE_CLASS ...
#define Py_TPFLAGS_HAVE_GC ...
#define Py_TPFLAGS_HAVE_GETCHARBUFFER ...
#define Py_TPFLAGS_HAVE_INPLACEOPS ...
#define Py_TPFLAGS_HAVE_ITER ...
#define Py_TPFLAGS_HAVE_RICHCOMPARE ...
#define Py_TPFLAGS_HAVE_SEQUENCE_IN ...
#define Py_TPFLAGS_HAVE_WEAKREFS ...
#define Py_TPFLAGS_HEAPTYPE ...
#define Py_TPFLAGS_READY ...
#define Py_TPFLAGS_READYING ...
#define Py_TPFLAGS_VALID_VERSION_TAG ...
#define SSTATE_NOT_INTERNED ...
#define T_BYTE ...
#define T_CHAR ...
#define T_DOUBLE ...
#define T_FLOAT ...
#define T_INT ...
#define T_LONG ...
#define T_OBJECT ...
#define T_OBJECT_EX ...
#define T_PYSSIZET ...
#define T_SHORT ...
#define T_STRING ...
#define T_UBYTE ...
#define T_UINT ...
#define T_ULONG ...
#define T_USHORT ...
#define _PyGC_REFS_UNTRACKED ...
    """
)

if "nt" in sys.modules:
    lib = "python27"
else:
    lib = "python2.7"

builder.set_source(
    "cpyffi",
    """
    #include "python-defs.h"
    """,
    libraries=[lib],
)

if __name__ == "__main__":
    builder.compile(verbose=True)
